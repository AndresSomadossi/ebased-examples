ExchangeCreateExchange:
  handler: src/exchange/handler/createExchange.handler
  name: ${file(resource/index.json):exchange.createExchange}
  description: 'CMD: Creates an exchange of money'
  environment:
    GET_RATE_FUNCTION_NAME: ${file(resource/index.json):exchange.getRate}
    REPORT_EXCHANGE_FUNCTION_NAME: ${file(resource/index.json):exchange.reportExchange}
    EXCHANGE_CREATED_TOPIC: ${file(resource/index.json):exchange.exchangeCreatedTopic}
    CREATE_DEPOSIT_QUEUE: ${file(resource/index.json):account.createDepositQueue}
  iamRoleStatementsInherit: true
  iamRoleStatementsName: ${file(resource/index.json):exchange.createExchange}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - !GetAtt ExchangeGetRateLambdaFunction.Arn
        - !GetAtt ExchangeReportExchangeLambdaFunction.Arn
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - !Ref ExchangeCreatedTopic
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource:
        - !GetAtt CreateDepositQueue.Arn
  events:
    - http:
        path: exchange
        method: post

ExchangeGetRate:
  handler: src/exchange/handler/getRate.handler
  name: ${file(resource/index.json):exchange.getRate}
  description: 'CMD: Returns the convertion rate for exchange money'
  environment:
    GET_RATES_URL: 'https://api.ratesapi.io/api/latest'
    GET_RATES_METHOD: 'GET'
    GET_RATES_TIMEOUT: 3000

ExchangeReportExchange:
  handler: src/exchange/handler/reportExchange.handler
  name: ${file(resource/index.json):exchange.reportExchange}
  description: 'EVT: Sends a report of an exchange to an external API'
  environment:
    REPORT_EXCHANGE_URL: 'https://postman-echo.com/post'
    REPORT_EXCHANGE_METHOD: 'POST'
    REPORT_EXCHANGE_TIMEOUT: 3000
  events:
    - sns: 
        arn: !Ref ExchangeCreatedTopic
        topicName: ${file(resource/index.json):exchange.exchangeCreatedTopic}